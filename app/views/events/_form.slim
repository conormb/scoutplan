= javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_API_KEY']}&libraries=places", async: true

- url = @event.new_record? ? unit_events_path(@unit) : unit_event_path(@unit, @event)
- method = @event.new_record? ? "post" : "patch"
- @format_date = "%Y-%m-%d"
- @format_time = "%H:%M:%S"

- content_for :body_classes do
  = "online-event" if @event.online

.mx-auto.max-w-3xl
  = styled_header_tag @event.new_record? ? t("events.titles.new") : t("events.titles.edit")

  - if @event.cancelled?
    .inline-block.rounded.bg-red-500.text-white.px-4.px-2.text-sm.font-bold.mb-2.uppercase.tracking-wide
      = "Cancelled"

  = form_with \
    model: @event,
    builder: ApplicationFormBuilder,
    scope: 'event',
    url: url,
    method: method,
    data: { turbo_action: "advance" } do |f|
    
    section.bg-stone-100.px-4.py-2.md:px-8.md:py-0.mb-1.rounded

      // title
      .md:border-b.py-2.md:py-4
        = f.styled_label :title, layout: :inline
        = f.text_field :title,
          class: "bg-white border border-stone-200 rounded p-2 w-full md:w-3/4 hover:ring-brand-500 placeholder-stone-300",
          autocomplete: "off",
          autofocus: true,
          placeholder: t("events.placeholders.title")

      // category
      .md:border-b.py-4
        = f.styled_label :category, layout: :inline
        = f.select \
          :event_category_id,
          @event.unit.event_categories.collect { |c| [ c.name, c.id ] },
          { \
            prompt: t("events.placeholders.category"),
            selected: @event.event_category_id,
          },
          { class: "border border-stone-200 rounded py-2 bg-white w-full md:w-fit" }

      // short description
      .py-4
        = f.styled_label :short_description, layout: :inline
        = f.text_field :short_description,
          class: "w-full md:w-3/4 border border-stone-200 rounded bg-white p-2 placeholder-stone-300",
          autocomplete: "off",
          placeholder: t("events.edit.short_description_placeholder")
    
    // Organizers
    - unless @event.new_record?
      section.bg-stone-100.py-4.px-4.md:px-8.mb-1.rounded
        .py-2.md:py-2
          = f.styled_label :organizers, layout: :inline
          - @event.organizers.each do |organizer|
            .inline-block.mr-2
              i.fa-user.fas.mr-2
              = organizer.full_display_name
          - if @event.organizers.empty?
            .inline-block.mr-4
              = "None"
          = link_to "Add & Remove",
            unit_event_organizers_path(@unit, @event),
            data: { turbo_action: "advance" },
            class: "border rounded px-4 py-2 text-sm font-bold tracking-wider uppercase text-brand-500 border-brand-500 ml-4"

    // RSVP
    section.bg-stone-100.py-4.px-4.md:px-8.mb-1.rounded
      .form-check.py-4
        = f.check_box :requires_rsvp, class: "w-4 h-4 text-green-500 rounded mr-2"
        = f.label :requires_rsvp, class: "text-sm font-bold tracking-wide uppercase"

      // payment amount
      .md:border-t.py-4
        = f.styled_label :payment_amount, t("events.captions.payment_amount"), layout: :inline
        = f.number_field :payment_amount,
                          class: "w-24 border border-stone-200 rounded bg-white p-2 placeholder-stone-300 disabled:text-stone-300 disabled:placeholder-stone-200",
                          min: 0

      #rsvp_fields.mt-6(class="#{@event.requires_rsvp ? '' : 'hidden'}")
        = f.styled_label :rsvp_closes_at, t("events.form.rsvp_closes_at"), layout: :inline
        = f.date_field :rsvp_closes_at,
          class: "bg-white border border-stone-200 rounded p-2 w-full md:w-fit hover:ring-brand-500 placeholder-stone-300"


    // activity
    section.bg-stone-100.py-4.px-4.md:px-8.mb-1.rounded
      .block.md:inline-block.w-full(class="md:w-1/4")
        = f.check_box \
          :includes_activity,
          class: "w-4 h-4 text-green-500 rounded mr-2",
          onclick: "toggleActivityFields(this.checked);"
        = f.label :includes_activity, class: "text-sm font-bold tracking-wide uppercase inline"

      = f.text_field \
        :activity_name,
        id: "activity_name_field",
        disabled: !@event.includes_activity,
        autocomplete: "off",
        class: "w-3/4 border border-stone-200 rounded bg-white p-2 placeholder-stone-300 disabled:text-stone-300 disabled:placeholder-stone-200",
        placeholder: "e.g. Rock climbing"

    // DATES
    section.bg-stone-100.p-4.md:px-8.mb-1.rounded      
      = render partial: 'events/partials/edit/dates', locals: { f: f }

    // LOCATION
    section.bg-stone-100.py-2.px-4.md:px-8.mb-1.rounded
      = render partial: "events/partials/edit/location_panel", locals: { f: f }

    // Published
    section.bg-stone-100.py-4.px-4.md:px-8.mb-1.rounded
      = f.check_box :status, { class: "w-4 h-4 text-green-500 rounded mr-2" }, "published", "draft"
      = f.styled_label :status, t("events.edit.published"), layout: :checkbox

    section.bg-stone-100.py-2.px-4.md:px-8.md:py-4.mb-1.rounded
      = f.label :description, class: "block mb-1 text-sm font-bold tracking-wide uppercase"
      = f.rich_text_area :description, class: "bg-white block border border-stone-200 overflow-auto h-48"

    - if event_cancellable?(@current_member, @event)
      section.bg-red-100.py-2.px-4.md:px-8.md:py-4.mb-1.rounded
        = f.styled_label "", "Danger", { layout: :inline, class: "color-red-500" }
        = link_to @event.new_record? ? t("global.cancel") : t("events.show.cancel_title"),
          unit_event_cancel_path(@unit, @event),
          class: "text-sm font-bold tracking-wider uppercase no-underline text-center \
                  block md:inline-block px-4 py-3 md:py-2 \
                  text-red-100 hover:text-red-200 \
                  bg-red-500 hover:bg-red-600 \
                  rounded",
          data: { turbo_action: "advance" }

    - if event_deletable?(@current_member, @event)
      section.bg-red-100.py-2.px-4.md:px-8.md:py-4.mb-1.rounded
        = f.styled_label "", "Danger", { layout: :inline, class: "color-red-500" }
        = content_tag(:button,
            t("events.form.delete_caption"),
            class: "text-sm font-bold tracking-wider uppercase no-underline text-center \
            block md:inline-block px-4 py-3 md:py-2 \
            text-red-100 hover:text-red-200 \
            bg-red-500 hover:bg-red-600 \
            rounded",
            onclick: "if (confirm('#{t("events.form.delete_confirm")}')) { document.querySelector('#delete_event_form').submit(); } else { return false; }" \
          )

    // spacer at the bottom of the form
    .h-4

    // footer
    footer.bg-white.pb-2.md:py-4.px-0.sticky.bottom-0.flex.flex-col.md:flex-row.md:justify-between.gap-2.border-t

      // LEFT SIDE
      div

      // RIGHT SIDE
      .flex.flex-col.md:flex-row.md:justify-end.gap-2
        // Save Changes
        = f.submit @event.new_record? ? t("events.new.add_this_event") : t("global.save_changes"),
          class: "text-white text-sm font-bold tracking-wider uppercase \
                  inline-block w-full md:w-fit px-4 py-3 md:py-2 \
                  bg-brand-500 hover:bg-brand-600 \
                  border-brand-500 hover:border-brand-600 \
                  border rounded cursor-pointer"                  
        
        // Discard Changes
        = link_to t("global.discard_changes"),
          @event.new_record? ? unit_events_path(@unit) : unit_event_path(@unit, @event),
          data: { turbo_action: "advance", turbo_frame: "main" },
          class: "text-center text-sm font-bold tracking-wider uppercase no-underline \
                  inline-block w-full md:w-fit px-4 py-3 md:py-2 \
                  bg-brand-100 hover:bg-brand-200 \
                  text-brand-500 hover:text-brand-600 \
                  border-brand-100 hover:border-brand-100 \
                  rounded border"

- if event_deletable?(@current_member, @event)
  .hidden
    = button_to "Hidden Delete Button",
      unit_event_path(@unit, @event),
      method: :delete,
      form: { id: "delete_event_form" },
      onclick: "return confirm('#{t("events.form.delete_confirm")}');",
      class: "text-sm font-bold tracking-wider uppercase no-underline text-center \
              block md:inline-block px-4 py-3 md:py-2 \
              text-red-100 hover:text-red-200 \
              bg-red-500 hover:bg-red-600 \
              rounded",
      data: { turbo_action: "advance" }

javascript:
  function toggleActivityFields(show) {
    var fieldsElem = document.querySelector("#activity_name_field");
    fieldsElem.disabled = !show;
    if(show) {
      fieldsElem.focus();
    }
  }

  document.addEventListener("DOMContentLoaded", function() {
    document.querySelector("#event_requires_rsvp").addEventListener("click", function(event){
      var rsvpFields = document.querySelector("#rsvp_fields");
      rsvpFields.classList.toggle("hidden", !event.target.checked);
    });

    document.querySelector("#event_event_category_id").addEventListener("change", function(event) {
      var titleInput = document.querySelector("#event_title");
      if(titleInput.value != "") {
        return;
      }

      var sel = event.target;
      var text = sel.options[sel.selectedIndex].text;
      titleInput.value = text;
    });
  });
