- url = @event_view.new_record? ? unit_events_path(@unit) : event_path(@event_view.event)
- method = @event_view.new_record? ? 'post' : 'patch'
- @format_date = '%Y-%m-%d'
- @format_time = '%H:%M:%S'

.mx-auto.max-w-3xl
  = form_with model: @event_view, scope: 'event', url: url, method: method, data: { 'turbo-action' => 'advance' } do |f|

    section

      // title
      .border-b.py-4
        = f.label :title, class: "inline-block w-[25%]"
        = f.text_field :title,
          class: "bg-gray-100 border-0 rounded p-2 w-[75%] hover:ring-scoutplan-500",
          autocomplete: 'off',
          placeholder: 'Title'

      // category
      .border-b.py-4
        = f.label :category, class: "inline-block w-[25%]"
        = f.select :event_category_id,
            @event.unit.event_categories.collect { |c| [ c.name, c.id ] },
            { prompt: t('event_category_prompt'), selected: @event_view.event_category_id },
            { class: "border-0 rounded py-2 bg-gray-100" }

      // short description
      .border-b.py-4
        = f.label :short_description, class: "inline-block w-[25%]"
        = f.text_field :short_description,
          class: "w-[75%] border-0 rounded bg-gray-100 p-2",
          autocomplete: "off",
          placeholder: t("events.edit.short_description_placeholder")

      // RSVP
      .form-check.mb-3
        = f.check_box :requires_rsvp, class: 'w-4 h-4 text-green-500 rounded mr-2'
        = f.label :requires_rsvp

      // tabbed interface
      .tabs.mt-6
        nav.flex(data-turbo="false")
          = link_to t('events.dates'),
            '#',
            class: 'inline-block tab-label flex-grow text-center py-1 text-gray-400 hover:text-black no-underline border-b uppercase text-sm tracking-wider selected',
            data: { 'toggle-target' => '#tab_dates' }

          = link_to t('events.location'),
            '#',
            class: 'inline-block tab-label flex-grow text-center py-1 text-gray-400 hover:text-black no-underline border-b uppercase text-sm tracking-wider',
            data: { 'toggle-target' => '#tab_location' }

          = link_to t('events.description'),
            '#',
            class: 'inline-block tab-label flex-grow text-center py-1 text-gray-400 hover:text-black no-underline border-b uppercase text-sm tracking-wider',
            data: { 'toggle-target' => '#tab_description' }

        section.flex.w-full.pt-3
          .tab-content.w-full#tab_dates
            = render partial: 'events/partials/edit/dates', locals: { f: f }

          .tab-content.w-full.hidden#tab_location
            = render partial: 'events/partials/edit/location', locals: { f: f }

          .tab-content.w-full.hidden#tab_description
            = f.rich_text_area :description, class: "block border mb-4 overflow-auto h-48"

    // footer
    footer.sticky.bottom-0
      .float-left
        span.inline-block.align-middle.mt-1
          = f.check_box :status, { class: 'w-4 h-4 text-green-500 rounded mr-2' }, 'published', 'draft'
          = f.label :status, 'Published'

      .float-right
        - if !@event.new_record? && policy(@event).cancel?
          = link_to 'Cancel This Event',
            unit_event_cancel_path(@unit, @event),
            data: { turbo_frame: 'event', turbo_action: 'advance' },
            class: 'px-4 py-2  text-sm font-bold tracking-wider uppercase no-underline mr-2'


        = f.submit "#{@event_view.new_record? ? 'Add This Event' : 'Save Changes'}", 
          class: "bg-scoutplan-500 px-4 py-2 border rounded text-white text-sm font-bold tracking-wider uppercase mr-2"
        
        = link_to t('global.cancel'),
          @event.new_record? ? unit_events_path(@unit) : unit_event_path(@unit, @event),
          data: { turbo_action: 'advance' },
          class: 'px-4 py-2 border bg-gray-200 text-black text-sm font-bold tracking-wider uppercase rounded no-underline'

javascript:
  // tab interfaces
  document.querySelectorAll('.tab-label[data-toggle-target]').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      event.stopPropagation();
      event.preventDefault();

      // toggle tab link selected
      document.querySelectorAll('.tab-label').forEach(function(elem) {
        elem.classList.remove('selected');
      });
      this.classList.add('selected');

      // toggle tab content visibility
      document.querySelectorAll('.tab-content').forEach(function(elem) {
        elem.style.display = 'none';
      });
      document.querySelector(elem.dataset.toggleTarget).style.display = 'block';
    });
  });