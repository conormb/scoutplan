- display_year = (params[:year] || cookies[:calendar_display_year] || Date.today.year).to_i
- display_month = (params[:month] || cookies[:calendar_display_month] || Date.today.month).to_i
- first_day_of_month = Date.new(display_year, display_month, 1)
- first_day_of_last_month = first_day_of_month.last_month
- days_in_month = first_day_of_month.end_of_month.day
- days_in_last_month = first_day_of_last_month.end_of_month.day
- display_day = - first_day_of_month.wday + 1
- done = false

header.flex.justify-between.py-2.border-b
  div
    .inline-block.dropdown
      a.dropdown-button(href="#")
        h2.px-2.font-bold.text-sm.md:text-lg.text-brand-500.md:w-40.inline-block
          = first_day_of_month.strftime("%B %Y")
          i.fa-chevron-down.fas.ml-2
      
      .dropdown-menu.absolute.bg-stone-800.text-stone-50.p-2.rounded
        = render partial: "events/partials/index/month_picker", locals: { display_date: first_day_of_month }

    // prev button
    = link_to targeted_calendar_unit_events_path(@unit,
        month: "%02i" % ((display_month > 1) ? display_month - 1 : 12),
        year: (display_month > 1) ? display_year : display_year - 1),
      title: t("events.calendar_view.prev_month"),
      data: { turbo_action: "advance" },
      class: "uppercase text-sm font-bold inline-block py-1 px-2 md:px-4 rounded-l border hover:bg-stone-100" do
        i.fa-chevron-left.fas.mr-1
        .hidden.md:inline
          = "Prev"

    // next button
    = link_to targeted_calendar_unit_events_path(@unit,
        month: "%02i" % ((display_month == 12) ? 1 : display_month + 1),
        year: (display_month == 12) ? display_year + 1 : display_year),
      data: { turbo_action: "advance" },
      class: "uppercase text-sm font-bold inline-block py-1 px-2 md:px-4 rounded-r border hover:bg-stone-100 border-l-0" do
        .hidden.md:inline
          = "Next"
        i.fa-chevron-right.fas.ml-1

    // today button
    = link_to "Today",
      targeted_calendar_unit_events_path(@unit,
        month: "%02i" % Time.now.month,
        year: Time.now.year),
      data: { turb_action: "advance" },
      class: "inline-block uppercase font-bold text-sm tracking-wide hover:bg-stone-100 border rounded px-2 py-1 ml-2"
  
  // RIGHT SIDE
  div
    // Add Event button
    - if policy(:event).create?
      = link_to new_unit_event_path(@unit),
                class:  " font-bold text-sm text-white tracking-wider uppercase" \
                        " inline-block px-4 py-2 mr-2" \
                        " bg-brand-500 hover:bg-brand-600" \
                        " rounded" \
                        "",
        data: { turbo_frame: "main", turbo_action: "advance" } do
        i.fas.fa-calendar-plus
        .hidden.md:inline.ml-3
          = t(:event_add)

    // Options dropdown button
    .inline-block.relative.dropdown
      button.text-sm.uppercase.tracking-wider.font-bold.rounded.bg-stone-200.hover:bg-stone-300.no-underline.text-black.px-4.py-2(type="button" onclick="this.parentElement.classList.toggle('menu-open');return false;")
        .hidden.md:inline.mr-3
          = t('events.index.view.dropdown')
        i.far.fa-chevron-down

      .dropdown-menu.origin-top-right.absolute.right-0.py-2.mt-px.min-w-max.rounded-md.shadow-lg.bg-stone-800.text-white.ring-1.ring-black.ring-opacity-5.divide-y.divide-stone-100.focus:outline-none
        .table
          = render partial: 'events/partials/index/dropdown_items/bulk_publish'   if @current_member.admin?
          = render partial: 'events/partials/index/dropdown_items/show_cancelled' if @current_member.admin?
          = render partial: 'events/partials/index/dropdown_items/show_only_rsvps'
          = render partial: 'events/partials/index/dropdown_items/show_past_events'          

.table.px-0.w-full.table-fixed
  .table-row.font-bold
    - 7.times do |dow|
      .table-cell.p-2
        .hidden.md:inline = Date::DAYNAMES[dow]
        .inline.md:hidden = Date::DAYNAMES[dow][0, 3]

  // start of loop
  - until display_day >= days_in_month do
    .table-row
      - 7.times do |col|
        - cell_class = "cal-cell-dow-#{col}"
        - cell_class << " cal-weekend-cell" if Date::WEEKEND_DAYS.include? col
        - display_date = first_day_of_month + display_day.days - 1

        - if display_day > days_in_month
          - day_number = display_day - days_in_month
        - elsif display_day < 1
          - day_number = days_in_last_month + display_day
        - else
          - day_number = display_day
          - month_number = display_month

        // now render the cell
        .table-cell.border-t.p-1.h-32.cal-cell.(class="#{cell_class}" data-cal-date="#{display_date}")
          - if display_date.today?
            - if day_number == 1
              .text-brand-500.font-bold
                = display_date.strftime("%b")

            .cal-day-number.text-white.font-bold
              .inline-block.w-7.h-7.justify-center.items-center.flex.rounded-full.bg-brand-500
                = display_date.strftime("%-d")

          - else
            .cal-day-number
              - if day_number == 1
                span.text-brand-500.font-bold
                  = display_date.strftime("%b")

              .inline-block.w-7.h-7.justify-center.items-center.whitespace-nowrap.ml-1
                = display_date.strftime("%-d")

          - @events.each do |event|
            - css_classes = "event-cancelled" if event.cancelled?
            - css_classes = "event-draft" if event.draft?

            - if display_date.beginning_of_day >= event.starts_at.beginning_of_day && \
              display_date.beginning_of_day <= event.ends_at.end_of_day
              .cal-event.text-xs.overflow-hidden(class="#{css_classes}")
                = link_to event.title, [ event.unit, event ],
                  class: "block p-1 font-bold hover:bg-stone-100 rounded",
                  data: { turbo_action: "advance" },
                  style: "color: #{event.category.color}"

        - display_day += 1

    // end of 7-day loop
  // end of until loop

javascript:
  document.addEventListener("turbo:load", function() {
    document.body.classList.remove("showing-as-list");
    document.body.classList.add("showing-as-calendar");
    setupCalendarClicks();
  })

  function setupCalendarClicks() {
    document.querySelectorAll(".cal-cell").forEach(function(elem) {
      elem.addEventListener("click", function(elem) {
        // var targetDate = elem.dataset.calDate;
        // console.log(targetDate);
        console.log(elem);
      });
    });
  }

css:
  .cal-weekend-cell {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23000000' fill-opacity='0.125' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E");    
  }