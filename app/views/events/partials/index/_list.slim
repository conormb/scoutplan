#event_table_container.max-w-2xl.mx-auto
  = form_tag bulk_publish_unit_events_path(@unit), id: "bulk_action_form"
    header.relative.mt-8.mb-2
      = render partial: "components/unit_name" if @current_user.multiple_units?

      .flex.flex-col.md:flex-row.justify-between.items-center
        .left
          h1.text-4xl.font-bold.mb-2
            = t("events.index.page_title")

        .right
          / = render partial: "new_event_button" if user_signed_in? && policy(:event).create?
          .dropdown
            = link_to "#", class: "dropdown-button inline-block text-2xl" do
              i.fa-circle-ellipsis.far.text-stone-500.dark:text-stone-300
            = render partial: "events/partials/index/dropdown"


    = render partial: "events/partials/index/empty_list"

    // LIST WRAPPER
    div
      // iterate by month
      - @event_month_count = 0
      - @current_event_month_count = 0

      = render partial: "bulk_publish_panel"

      div
        = turbo_frame_tag "past_events", src: list_unit_events_path(@unit, scope: "past"), loading: "lazy"

        = turbo_frame_tag "current_events"
          = render partial: "event_year"

        = turbo_frame_tag "future_events", src: list_unit_events_path(@unit, scope: "future")
          .text-center
            i.text-stone-300.text-lg.fa-solid.fa-circle-notch.fa-spin

javascript:
  document.addEventListener("turbo:load", function() {
    document.body.classList.add("showing-as-list");
    document.body.classList.remove("showing-as-calendar");
    prepareEventLinks();
    setUpBulkPublish();
  });

  function setUpBulkPublish() {
    // wire up the bulk Publish button
    document.querySelector('#bulk_publish_execute_button')?.addEventListener('click', function(event) {
      document.querySelector('#bulk_action_form').submit();
      event.preventDefault();
    });

    document.querySelector("#check_all_button")?.addEventListener("click", function(event) {
      selectAllBulkPublish(true);
      event.preventDefault();
    });

    document.querySelector("#uncheck_all_button")?.addEventListener("click", function(event) {
      selectAllBulkPublish(false);
      event.preventDefault();
    });  

    // wire up event row checkboxes
    document.querySelectorAll("input.bulk-publish-checkbox").forEach(function(elem) {
      elem.addEventListener("click", function(event) {
        validateBulkPublishState();
      });
    });

    // wire up Cancel bulk publish button
    document.querySelector('#cancel_bulk_publish')?.addEventListener('click', function(event) {
      document.body.classList.toggle('showing-only-draft-events');
      document.body.classList.toggle('events-filtered');
      event.preventDefault();
    });

    // END BULK PUBLISH  

    // As the user changes visibility options (e.g. show/hide cancelled), we need to
    // recalculate which month headers should be shown or hidden. Months containing
    // zero visible events should be hidden, whereas months containing events should be
    // shown. To accomplish this, we establish a mutation observer on the <body> element,
    // looking for changes to the body CSS classes. Those class changes correspond to
    // visibliity changes
    const mutationObserver = new MutationObserver(bodyMutated);
    mutationObserver.observe(document.body, { attributes: true });  

    // ...and then run the show/hide algorithm once to kick us off
    // hideEmptyMonthHeaders();
  }

  function bodyMutated(mutationsList, observer) {
    mutationsList.forEach(function(mutation) {
      if (mutation.attributeName === 'class') {
        // hideEmptyMonthHeaders();
      }
    });
  }

  var gOriginalBulkPublishExecuteButtonCaption;

  // fired whenever a bulk update checkbox is clicked
  function validateBulkPublishState() {
    // tally up checked count
    const checkedCount = document.querySelectorAll("input.bulk-publish-checkbox:checked").length;
    console.log(checkedCount);

    // enable execute button
    var bulkPublishExecuteButton = document.querySelector("#bulk_publish_execute_button");
    bulkPublishExecuteButton.disabled = (checkedCount == 0);

    // enable uncheck all button

    // store the original caption, if needed
    gOriginalBulkPublishExecuteButtonCaption = gOriginalBulkPublishExecuteButtonCaption ?? bulkPublishExecuteButton?.value;

    // update execute button caption
    bulkPublishExecuteButton.value = gOriginalBulkPublishExecuteButtonCaption + (checkedCount == 0 ? '' : ' (' + checkedCount + ')');
  }

  function selectAllBulkPublish(checked) {
    document.querySelectorAll(".event-draft:not(.event-past) .bulk-publish-checkbox").forEach(function(elem) {
      elem.checked = checked;
    });
    validateBulkPublishState();
  }  

  function toggleMonthSections(parentClass, childClass) {
    var visibleParents = 0;

    document.querySelectorAll(parentClass).forEach(function(elem) {
      elem.style.display = "none";

      // TODO: traverse forward to next month header, then traverse from there to the next visible event row
      var visibleCount = 0;

      elem.querySelectorAll(childClass).forEach(function(elem) {
        var compStyles = window.getComputedStyle(elem);
        var compDisplay = compStyles.getPropertyValue('display');
        if(compDisplay == "none") {
          return; // nothing to see here...move on
        }
        visibleCount++;
      });

      if (visibleCount > 0) {
        elem.style.display = "block";
        visibleParents++;
      }
    });
  }
  
  // Each row is a link. Set them up so they disable when in bulk edit mode
  // to prevent accidentally navigating away from the page
  function prepareEventLinks() {
    document.querySelectorAll("a.event").forEach(function(elem) {
      elem.addEventListener("click", function(event) {
        if (document.body.classList.contains("showing-only-draft-events")) {
          event.preventDefault();
          return false;
        }
      });
    });
  }