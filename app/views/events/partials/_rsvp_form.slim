- @format_date = '%Y-%m-%d'
- @format_time = '%H:%M:%S'

.modal.fade#eventRsvpModal
  .modal-dialog
    .modal-content
      = form_for @event, url: { action: :rsvp } do |f|
        .modal-header
          h5.modal-title = t(:rsvp_dialog_title)
          button.btn-close(type="button" data-bs-dismiss="modal")

        .modal-body
          table.table
            tbody
              - current_user.family.each do |user|
                - existing_rsvp = @event.rsvps.find_by(user: user)
                - rsvp = @event.rsvps.build(user: user, response: existing_rsvp&.response)
                tr
                  = f.fields_for 'users[]', user do |user_fields|
                    = user_fields.fields_for 'event_rsvp', rsvp do |rsvp_fields|
                      td = @presenter.family_context_name(user)
                      td
                        .float-end
                          .form-check.form-check-inline
                            = rsvp_fields.radio_button :response, :accepted, class: 'form-check-input'
                            = rsvp_fields.label :response, :accepted, value: :accepted, class: 'form-check-label' do
                              = t('rsvp_accept')

                          .form-check.form-check-inline
                            = rsvp_fields.radio_button :response, :declined, class: 'form-check-input'
                            = rsvp_fields.label :response, :declined, value: :declined, class: 'form-check-label' do
                              = t('rsvp_decline')

        // form buttons
        .modal-footer
          = submit_tag t('helpers.label.event.rsvp_save', noun: pluralize(current_user.family.count, 'helpers.label.event.rsvp_noun')), class: 'btn btn-primary', id: 'rsvp_submit'
          button.btn.btn-secondary(type="button" data-bs-dismiss="modal") = t('helpers.label.event.cancel_button')
