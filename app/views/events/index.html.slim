// TODO: move this to dynamic stylesheet

- content_for :body_classes do
  = "events-filtered showing-only-rsvp-events" if session[:view] == 'rsvps'

style
  - @unit.event_categories.each do |category|
    = "tr.event.event-#{ category.name.parameterize } .glyph svg { color: #{ category.color } }\n"

= render 'events/partials/index/header'

.filter-status
  = 'Showing only some events'

main.pt-4
  = render partial: 'events/partials/index/no_events' if @events.count.zero?

  - if @events.count.positive?
    = form_tag bulk_publish_unit_events_path(@unit), id: 'bulk_action_form'
      table.table-clickable
        thead
          tr
            th.selection
              = check_box_tag 'all_visible_events', 'on', false, class: 'form-check-input', id: 'select_all_events_checkbox'

            th.date = t(:event_date)
            th.days
            th.glyph
            th.title =t(:event_title)
            th.status
            th.location.tablet =t(:event_location)
            th.action.desktop =t(:event_rsvp)
        tbody
          = render @events

  p.text-center#show-future-events-wrapper
    = t('events.index.showing_some', link: link_to(t('events.index.show_all'), '#', class: 'toggle-body-class', data: { 'body-class' => 'showing-future-events' })).html_safe

= render 'events/partials/event_form'


javascript:

  // wire up the bulk Publish button
  document.querySelector('#bulk_publish_execute_button').addEventListener('click', function(event) {
    document.querySelector('#bulk_action_form').submit();
    event.preventDefault();
  });

  // wire up the check/uncheck all box
  document.querySelector('#select_all_events_checkbox').addEventListener('click', function(event) {
    const checked = this.checked;
    document.querySelectorAll('.bulk-publish-checkbox events-filtered').forEach(function (elem) {
        elem.checked = checked && elem.offsetParent !== null;
    });
    validateBulkPublishState();
  });

  // wire up Cancel bulk publish button
  document.querySelector('#cancel_bulk_publish').addEventListener('click', function(event) {
    document.body.classList.toggle('showing-only-draft-events');
    document.body.classList.toggle('events-filtered');
    event.preventDefault();
  });

  const bulkPublishExecuteButton = document.querySelector('#bulk_publish_execute_button')
  const originalBulkPublishExecuteButtonCaption = bulkPublishExecuteButton.value;

  // wire up event row checkboxes
  document.querySelectorAll('.bulk-publish-checkbox').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      validateBulkPublishState();
    });
  });

  function validateBulkPublishState() {
    // tally up checked count
    const checkedCount = document.querySelectorAll('input:checked').length;

    // enable execute button
    bulkPublishExecuteButton.disabled = (checkedCount == 0);

    // update execute button caption
    bulkPublishExecuteButton.value = originalBulkPublishExecuteButtonCaption + (checkedCount == 0 ? '' : ' (' + checkedCount + ')');
  }

  document.querySelectorAll('.toggle-body-class').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      const classNames = this.dataset.bodyClass.split(' ');
      for(const className of classNames) {
        document.body.classList.toggle(className);
      }
      event.preventDefault();
    });
  });

  // links inside clickable rows should take priority, so we stop
  // propagation on them
  var links = document.getElementsByClassName('event-rsvp-link');
  for (const link of links) {
    link.addEventListener('click', function(event) {
      event.stopPropagation();
    });
  }

  // also prevent checkboxes from firing clickable rows
  document.querySelectorAll('.selection input[type="checkbox"]').forEach(function (elem) {
    elem.addEventListener('click', function(event) {
      event.stopPropagation();
    });
  });

scss:
  .event-month-boundary {
    background-color: #f3f3f3;
  }

  tr.no-hover:hover td {
    background-color: inherit !important;
  }

  .menu-glyph {
    display: inline-block;
    width: 1.5rem;
  }

  .menu-glyph-wrapper {
    display: none;
  }

  .event-row {
    display: table-row;
    transition: height 2s ease;
  }

  .event-past, .event-cancelled, .event-future {
    display: none;
  }

  .filter-status {
    display: none;
  }

  body.events-filtered {
    .filter-status {
      display: block;
    }
  }

  body.showing-cancelled-events {
    .event-cancelled {
      display: table-row;
    }

    #show-cancelled-events-link {
      .menu-glyph-wrapper {
        display: inline-block;
      }
    }
  }

  body.showing-only-rsvp-events {
    .event-row:not(.event-rsvp) {
      display: none;
    }

    #show-only-rsvp-events-link {
      .menu-glyph-wrapper {
        display: inline-block;
      }
    }
  }

  // Draft events / bulk publish

  th.selection, td.selection {
    display: none;
  }

  #bulk_publish_button_wrapper {
    display: none;
  }

  body.showing-only-draft-events {
    .event-row:not(.event-draft) {
      display: none;
    }

    #show-only-draft-events-link {
      .menu-glyph-wrapper {
        display: inline-block;
      }
    }

    th.selection, td.selection {
      display: table-cell;
    }

    #bulk_publish_button_wrapper {
      display: inline-block;
    }

    #add_event_button_wrapper {
      display: none;
    }
  }

  body.showing-past-events {
    .event-past {
      display: table-row;
    }

    #show-past-events-link {
      .menu-glyph-wrapper {
        display: inline-block;
      }
    }
  }

  body.showing-future-events {
    .event-future {
      display: table-row;
    }

    #show-future-events-wrapper {
      display: none;
    }
  }

  .event-rsvp-link {
    z-index: 1000;
  }

  .daynames {
    font-size: 0.75rem;
    // margin-left: 1rem;
    text-transform: uppercase;
    color: #888;
  }

  td.month {
    font-weight: bold;
  }

  tr.event {
    td.glyph {
      text-align: center;
    }
  }

  input[type="date"].error {
    background-color: #ffffcc;
    animation: shake 0.6s 0s;
  }

  @keyframes pulse-animation {
    0% {
      box-shadow: 0 0 0 0px rgba(0, 0, 0, 0.2);
    }
    100% {
      box-shadow: 0 0 0 20px rgba(0, 0, 0, 0);
    }
  }

  @keyframes wiggle {
     0% { transform: skewX(9deg); }
     10% { transform: skewX(-8deg); }
     20% { transform: skewX(7deg); }
     30% { transform: skewX(-6deg); }
     40% { transform: skewX(5deg); }
     50% { transform: skewX(-4deg); }
     60% { transform: skewX(3deg); }
     70% { transform: skewX(-2deg); }
     80% { transform: skewX(1deg); }
     90% { transform: skewX(0deg); }
     100% { transform: skewX(0deg); }
  }

  @keyframes shake {
   0%, 100% {transform: translateX(0);}
   10%, 30%, 50%, 70%, 90% {transform: translateX(-5px);}
   20%, 40%, 60%, 80% {transform: translateX(5px);}
  }

  tr.event-camping {
    td:first-child {
      border-left-color: green;
    }

    .glyph svg {
      color: green;
    }
  }

  tr.court_of_honor-event {
    td:first-child {
      border-left-color: GoldenRod;
    }

    .glyph svg {
      color: GoldenRod;
    }
  }

  tr.event-troop_meeting {
    td:first-child {
      border-left-color: FireBrick;
    }

    .glyph svg {
      color: FireBrick;
    }
  }

  .rsvp-response svg {
    margin-right: 0.2rem;
    color: #ccc;
  }

  .rsvp-accepted svg {
    color: green;
  }

  .rsvp-declined svg {
    color: red;
  }

  td.action {
    font-size: 75%;

    ul {
      list-style: none;
      margin: 0;
      padding: 1px 0 0 0;

      li {
        display: inline-block;
        padding: 0 0.5rem 0 0;
      }
    }

    a.btn {
      padding-top: 1px !important;
      padding-bottom: 1px !important;
      font-size: 90%;
    }
  }
