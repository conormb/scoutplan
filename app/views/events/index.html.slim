/ empty turbo frame to be populated by an Event modal as needed
= turbo_frame_tag 'event'

.w-full.mx-auto(data-controller="event")
  = render partial: 'events/partials/index/header'
  = render partial: 'events/partials/index/no_events' if @events.count.zero?

  = turbo_frame_tag('event_list')
    = render partial: 'events/partials/index/table' if @events.count.positive?

- content_for :body_classes do
  = 'showing-only-rsvp-events' if session[:view] == 'rsvps'

/ = render 'events/partials/event_form'

javascript:
  // wire up the bulk Publish button
  document.querySelector('#bulk_publish_execute_button').addEventListener('click', function(event) {
    document.querySelector('#bulk_action_form').submit();
    event.preventDefault();
  });

  // wire up the check/uncheck all box
  document.querySelector('#select_all_events_checkbox').addEventListener('click', function(event) {
    const checked = this.checked;
    document.querySelectorAll('.bulk-publish-checkbox').forEach(function (elem) {
        elem.checked = checked && elem.offsetParent !== null;
    });
    validateBulkPublishState();
  });

  // wire up Cancel bulk publish button
  document.querySelector('#cancel_bulk_publish').addEventListener('click', function(event) {
    document.body.classList.toggle('showing-only-draft-events');
    document.body.classList.toggle('events-filtered');
    event.preventDefault();
  });

  var bulkPublishExecuteButton = document.querySelector('#bulk_publish_execute_button');
  var originalBulkPublishExecuteButtonCaption = bulkPublishExecuteButton.value;

  // wire up event row checkboxes
  document.querySelectorAll('.bulk-publish-checkbox').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      validateBulkPublishState();
    });
  });

  function validateBulkPublishState() {
    // tally up checked count
    const checkedCount = document.querySelectorAll('.selection input:checked').length;

    // enable execute button
    bulkPublishExecuteButton.disabled = (checkedCount == 0);

    // update execute button caption
    bulkPublishExecuteButton.value = originalBulkPublishExecuteButtonCaption + (checkedCount == 0 ? '' : ' (' + checkedCount + ')');
  }

  // links inside clickable rows should take priority, so we stop
  // propagation on them
  var links = document.getElementsByClassName('event-rsvp-link');
  for (const link of links) {
    link.addEventListener('click', function(event) {
      event.stopPropagation();
    });
  }

  // also prevent checkboxes from firing clickable rows
  document.querySelectorAll('.selection input[type="checkbox"]').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      event.stopPropagation();
    });
  });

  // click on an event row
  document.querySelectorAll('tr.event').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      href = this.dataset.href;
      window.location = href;
    });
  });

  // tab interfaces
  document.querySelectorAll('.tab-label[data-toggle-target]').forEach(function(elem) {
    elem.addEventListener('click', function(event) {

    });
  });

= render partial: 'events/partials/styles'