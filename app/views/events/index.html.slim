= @unit.name

style
  - @unit.event_categories.each do |category|
    / = "tr.event.#{ category.name.parameterize }-event td:first-child { border-left-color: #{ category.color } }\n"
    = "tr.event.#{ category.name.parameterize }-event .glyph svg { color: #{ category.color } }\n"
    / = ".glyph svg.#{ category.name.parameterize } { color: #{ category.color } }\n"

h1 Events

/ - @current_year = nil
/ - @current_month = nil

- if policy(:event).create?
  = link_to t(:event_add), '#newEventModal', id: 'new-event-button', class: 'btn btn-primary', data: { 'bs-toggle' => 'modal' }

- unless @events.empty?

  p = link_to t(:event_subscribe), ''

  table.table-clickable
    thead
      tr
        th
        th.date = t(:event_date)
        th.glyph.desktop
        th.title =t(:event_title)
        th.location.tablet =t(:event_location)
        th.action.desktop
    tbody
      = render @events

= render 'form'

scss:
  .daynames {
    font-size: 0.75rem;
    // margin-left: 1rem;
    text-transform: uppercase;
    color: #888;
  }

  tr.event {
    td.month {
      font-weight: bold;
    }

    td.glyph {
      text-align: center;
    }
  }


  tr.camping-event {
    td:first-child {
      border-left-color: green;
    }

    .glyph svg {
      color: green;
    }
  }

  tr.court_of_honor-event {
    td:first-child {
      border-left-color: GoldenRod;
    }

    .glyph svg {
      color: GoldenRod;
    }
  }

  tr.troop_meeting-event {
    td:first-child {
      border-left-color: FireBrick;
    }

    .glyph svg {
      color: FireBrick;
    }
  }

  .rsvp-accepted svg {
    color: green;
  }

  .rsvp-declined svg {
    color: red;
  }
