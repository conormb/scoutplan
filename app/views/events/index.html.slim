.w-full.mx-auto(data-controller="event")
  = turbo_frame_tag('event_list')
    = render partial: 'events/partials/index/header'
    = render partial: 'events/partials/index/no_events' if @events.count.zero?
    = render partial: 'events/partials/index/table' if @events.count.positive?

- content_for :body_classes do
  = 'showing-only-rsvp-events' if session[:view] == 'rsvps'

// empty turbo frame to be populated by an Event modal as needed
= turbo_frame_tag 'event'

javascript:
  /* BULK PUBLISH */

  // wire up the bulk Publish button
  document.querySelector('#bulk_publish_execute_button').addEventListener('click', function(event) {
    document.querySelector('#bulk_action_form').submit();
    event.preventDefault();
  });

  // wire up the check/uncheck all box
  document.querySelector('#select_all_events_checkbox').addEventListener('click', function(event) {
    const checked = this.checked;
    document.querySelectorAll('.bulk-publish-checkbox').forEach(function (elem) {
        elem.checked = checked && elem.offsetParent !== null;
    });
    validateBulkPublishState();
  });

  var bulkPublishExecuteButton = document.querySelector('#bulk_publish_execute_button');
  var originalBulkPublishExecuteButtonCaption = bulkPublishExecuteButton.value;

  // wire up Cancel bulk publish button
  document.querySelector('#cancel_bulk_publish').addEventListener('click', function(event) {
    document.body.classList.toggle('showing-only-draft-events');
    document.body.classList.toggle('events-filtered');
    event.preventDefault();
  });

  // wire up event row checkboxes
  document.querySelectorAll('.bulk-publish-checkbox').forEach(function(elem) {
    elem.addEventListener('click', function(event) {
      validateBulkPublishState();
    });
  });

  function validateBulkPublishState() {
    // tally up checked count
    const checkedCount = document.querySelectorAll('.event-row .bulk-selection input:checked').length;

    // enable execute button
    bulkPublishExecuteButton.disabled = (checkedCount == 0);

    // update execute button caption
    bulkPublishExecuteButton.value = originalBulkPublishExecuteButtonCaption + (checkedCount == 0 ? '' : ' (' + checkedCount + ')');
  }

  /* SHOW/HIDE MONTH HEADERS */

  // find the first prior sibling matching a given selector
  function queryPreviousSiblingSelector(elem, selector) {
    var currentElem = elem;
    var done = false;
    while(!done) {
      currentElem = currentElem.previousSibling;
      if (currentElem === null) {
        return null;
      }
      done = currentElem.matches(selector);
    }

    return currentElem;
  }

  function hideEmptyMonthHeaders() {
    // iterate over all month rows and hide them
    document.querySelectorAll('.event-month-boundary').forEach(function(elem) {
      elem.style.display = 'none';
    });

    // iterate over all visible event rows, back up to its month header, and reveal it
    document.querySelectorAll('.event-row').forEach(function(elem) {
      var compStyles = window.getComputedStyle(elem);
      var compDisplay = compStyles.getPropertyValue('display');
      if(compDisplay == 'none') {
        return; // nothing to see here...move on
      }

      const selector = '.event-month-boundary';
      var monthHeader = queryPreviousSiblingSelector(elem, selector);
      monthHeader.style.display = 'table-row';
    });    
  }

  function bodyMutated(mutationsList, observer) {
    mutationsList.forEach(function(mutation) {
      console.log(mutation.attributeName);
      if (mutation.attributeName === 'class') {
        hideEmptyMonthHeaders();
      }
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    hideEmptyMonthHeaders();
    const mutationObserver = new MutationObserver(bodyMutated);
    mutationObserver.observe(document.body, { attributes: true });
  });

- if false
  javascript:
    // links inside clickable rows should take priority, so we stop
    // propagation on them
    var links = document.getElementsByClassName('event-rsvp-link');
    for (const link of links) {
      link.addEventListener('click', function(event) {
        event.stopPropagation();
      });
    }

    // also prevent checkboxes from firing clickable rows
    document.querySelectorAll('.bulk-selection input[type="checkbox"]').forEach(function(elem) {
      elem.addEventListener('click', function(event) {
        event.stopPropagation();
      });
    });

    // click on an event row
    document.querySelectorAll('tr.event').forEach(function(elem) {
      elem.addEventListener('click', function(event) {
        href = this.dataset.href;
        window.location = href;
      });
    });

= render partial: 'events/partials/styles'