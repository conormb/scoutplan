- recipients = [ ["All #{@unit.name} Members", "everyone", "people-group", "#913F17"] ]

- events = @unit.events.recent.rsvp_required.published
/ - recipients << ["", nil] if events.present?

- events.each do |event|
  - recipients << ["#{event.title} Attendees & Guardians", "event_#{event.id}_attendees", event.category.glyph, event.category.color, "ended #{distance_of_time_in_words_to_now(event.ends_at)} ago"]

- @unit.events.published.upcoming.rsvp_required.each do |event|
  - recipients << ["#{event.title} Attendees & Guardians", "event_#{event.id}_attendees", event.category.glyph, event.category.color, "starts in #{distance_of_time_in_words_to_now(event.starts_at)}"]

= form_with model: @message,
            url: @message.new_record? ? unit_messages_path(@unit) : unit_message_path(@unit, @message),
            method: @message.new_record? ? "post" : "patch",
            data: { controller: "message-form", turbo_action: "advance", "message-form-unit-id-value" => @unit.id } do |f|

  section.flex.flex-col.divide-y
    // FROM
    div.hidden
      = f.label :from, "From", class: "inline-block py-2 font-bold"
      = text_field nil,
                    :from,
                    disabled: true,
                    value: @unit.from_address,
                    class: "font-bold w-full border border-stone-400 rounded bg-white dark:bg-black dark:border-stone-500 p-2 disabled:text-stone-400"


    // 'TO' SECTION
    div#recipient_wrapper.dropdown.relative(data-controller="dropdown" data-action="keydown->dropdown#handleKeydown")

      // recipient dropdown box
      #audience_list.dropdown-menu.absolute.top-full.w-full.h-60.bg-white.overflow-scroll.dark:bg-black.drop-shadow-lg.border.border-stone-200.dark:border-stone-700
        #recipient_list.absolute.inset-0.bg-white.dark:bg-black.z-10.overflow-scroll.hidden(data-message-form-target="recipientList")
          footer.fixed.bottom-0.w-full.bg-white.dark:bg-black.border-t.text-right

            a.text-sm.block.p-2.text-blue-500.font-semibold(href="#" data-action="message-form#toggleRecipientList" )
              = "Hide recipients"

          #recipient_list_content

        ul(data-message-form-target="audienceList")
          - recipients.each do |recipient|
            - classes = recipient[1] == "everyone" ? "active" : ""

            li.audience-item(class="#{classes}")

              = label_tag nil do
                = radio_button_tag :audience,
                                    recipient[1],
                                    recipient[1] == "everyone",
                                    class: "hidden inline-block audience-checkbox",
                                    data: { action: "message-form#updateRecipients", message_form_audience_name: recipient[0] }

                span.flex.flex-row.gap-1.items-center.hover:bg-stone-200.dark:hover:bg-stone-700.py-3.px-2
                  i.fa-stack(style="color: #{recipient[3]}")
                    i.fa-solid.fa-circle.fa-stack-2x
                    i.fa-solid.fa-stack-1x.text-white(class="fa-#{recipient[2]}")

                  span
                    = recipient[0]
                    - if recipient[4]
                      .text-sm = recipient[4]

        // switches
        .flex.flex-col.md:flex-row.gap-0.md:gap-4.px-3.absolute.bottom-0.w-full.border-t.items-center
          = render partial: "components/switch", locals: { checked: @message.member_type == "adults_only",
                                                            label: "Only send to adults",
                                                            object_name: "message",
                                                            method: "member_type",
                                                            checked_value: "adults_only",
                                                            unchecked_value: "youth_and_adults",
                                                            css_classes: "py-2",
                                                            size: "sm",
                                                            data: { action: "message-form#updateRecipients", "message-form-target" => "memberTypeCheckBox" } }

          div(data-message-form-target="ffCheckWrapper")
            = render partial: "components/switch", locals: { checked: @message.member_type == "family_and_friends",
                                                            label: "Include family & friends",
                                                            object_name: "message",
                                                            method: "member_status",
                                                            checked_value: "active_and_registered",
                                                            unchecked_value: "active",
                                                            css_classes: "py-2",
                                                            size: "sm",
                                                            data: { action: "message-form#updateRecipients", "message-form-target" => "memberStatusCheckBox" } }

            #recipient_list.absolute.right-10.top-20.mt-1.w-48.h-80.p-2.bg-sky-600.text-sky-100.font-bold.rounded.z-20.overflow-scroll.hidden(data-message-form-target="recipientList")
          
          = link_to "#",
                    class: "text-blue-500 text-sm font-bold ml-auto",
                    data: { action: "message-form#toggleRecipientList" } do
            
            = "Show recipients"

      // TO row
      .flex.flex-row.gap-6.items-center

        // TO label
        = f.label :groups, "To", class: "inline-block py-3 font-bold"

        // TO field (simulates a combo box)

        = link_to "#",
                  class: "block w-full flex flex-row justify-between items-center",
                  data: { dropdown_target: "toggle", action: "dropdown#toggle" } do

          div.left
            span(data-message-form-target = "audienceName") = "Active #{@unit.name} members"

            // recipient count pill
            span#recipient_count.mx-2.text-sm.rounded.rounded-xl.bg-stone-300.text-stone-800.px-3.py-1.font-semibold

          // chevron
          div.right
            i.fa-solid.fa-chevron-down.text-stone-500

    // SUBJECT
    div.flex.flex-row.gap-6.py-3.items-center
      = f.label :subject, t("messages.form.labels.subject"), class: "block font-bold"

      = f.text_field :title,
                      autofocus: true,
                      autocomplete: "off",
                      class: "p-0 w-full border-0 bg-transparent placeholder-stone-400 dark:placeholder-stone-500 disabled:text-stone-300 disabled:placeholder-stone-200 ring-0 focus:ring-0",
                      placeholder: t("messages.form.placeholders.subject"),
                      data: { message_form_target: "subjectTextBox", action: "message-form#validate" }

    // BODY
    div.py-2
      = f.rich_text_area :body,
                         class: "p-0 focus:outline-none border-0 overflow-auto border border-stone-400 dark:border-stone-500 placeholder-stone-400 dark:placeholder-stone-500",
                         placeholder: "Type your message...",
                         data: { action: "message-form#validate" }

    // FOOTER
    footer.border-t.py-4.dark:border-stone-500
      - unless MessagePolicy.new(@current_member, @message).create?
        p.text-sm.font-bold
          i.fa-solid.fa-circle-info.mr-1
          | Your message will be sent to unit leadership for approval before being sent.

      .flex.flex-col.md:flex-row.justify-between.bottom-0.sticky

        - submit_caption = MessagePolicy.new(@current_member, @message).create? ? t("messages.captions.send_message") : "Submit for Approval"

        // LEFT SIDE
        div.flex.flex-row.gap-0

          // SEND NOW BUTTON

          = f.button submit_caption,
                    type: "submit",
                    name: "commit",
                    disabled: true,
                    value: t("messages.captions.send_message"),
                    class: "inline-block px-4 py-2 font-bold text-white bg-lime-600 hover:bg-lime-700 disabled:bg-lime-200 rounded",
                    id: "send_message_button",
                    data: { message_form_target: "sendMessageButton" } do

          .spacer.w-6
        
          = f.button t("messages.captions.save_draft"),
                    type: "submit",
                    class: "text-xl py-2 px-3 rounded uppercase text-lime-600 hover:text-lime-700 dark:hover:text-stone-300 cursor-pointer",
                    value: t("messages.captions.save_draft"),
                    name: "commit",
                    title: "Save as a draft" do
              i.fa-solid.fa-floppy-disk

          = f.button t("messages.captions.send_preview"),
                    type: "submit",
                    title: "Send a preview to yourself",
                    value: t("messages.captions.send_preview"),
                    name: "commit",
                    class: "text-xl w-full md:w-fit px-3 py-2 text-lime-600 hover:text-lime-700 dark:hover:text-stone-300 cursor-pointer" do
              i.fa-solid.fa-glasses-round

          .relative
            = f.button t("messages.captions.send_later"),
                      type: "button",
                      title: "Send later",
                      value: t("messages.captions.send_preview"),
                      name: "commit",
                      class: "text-xl w-full md:w-fit px-3 py-2 text-lime-600 hover:text-lime-700 dark:hover:text-stone-300 cursor-pointer" do
                i.fa-solid.fa-calendar-days   

          = f.button "Attach",
                    type: "button",
                    title: "Attach files",
                    value: "attach",
                    name: "attach",
                    class: "text-xl w-full md:w-fit px-3 py-2 text-lime-600 hover:text-lime-700 dark:hover:text-stone-300 cursor-pointer" do
              i.fa-solid.fa-paperclip

          = link_to "#",
                    class: "text-xl w-full md:w-fit px-3 py-2 text-lime-600 hover:text-lime-700 dark:hover:text-stone-300 cursor-pointer",
                    data: { action: "message-form#toggleFormatting" } do

            i.fa-solid.fa-text-size

          - unless @message.new_record?
            = f.button t("messages.captions.delete_draft"),
                      type: "submit",
                      title: "Delete this draft",
                      value: t("messages.captions.delete_draft"),
                      name: "commit",
                      onclick: "return confirm('Are you sure you want to delete this draft?');",
                      class: "w-full md:w-fit py-2 text-lime-600 hover:text-lime-700 cursor-pointer" do

              i.fa-solid.fa-trash

- unless @message.new_record?
  - service = MessageService.new(@message)
  h3.font-bold Recipients
  ol
    - service.resolve_members.each do |member|
      li = member.full_display_name


javascript:
  document.querySelectorAll(".delivery-method-checkbox").forEach(function(elem) {
    elem.addEventListener("click", function(event) {
      validateForm();
    });
  });

  function validateForm() {
    var formValid = true;

    var deliveryMethodsContainer = document.querySelector("#delivery_methods_container");
    var deliveryMethodCount = deliveryMethodsContainer.querySelectorAll("input:checked").length;
    formValid = formValid && (deliveryMethodCount > 0);

    var sendMessageButton = document.querySelector("#send_message_button");
    sendMessageButton.disabled = !formValid;
  }

css:
  trix-toolbar {
    display: none;
  }

  .formatting-active trix-toolbar {
    display: block;
  }

  trix-editor {
    min-height: 20rem;
  }

  trix-editor:empty:not(:focus)::before {
    color: #a8a29e;
  }

  .audience-item.active a {
    background-color: #E66425;
    color: white;
    font-weight: bold;
  }

  input[type='radio'].audience-checkbox:checked ~ span {
    background-color: #E66425;
    color: white;
    font-weight: bold;
  }

  #recipient_list li {
    display: inline-block;
  }

  #recipient_list li:after {
    content: ";\00a0";
  }

  #recipient_list li:last-child:after {
    content: "";
  }

  #recipient_list ul {
    margin: 0.5rem 0.5rem 3rem 0.5rem;
  }

  #recipient_count:empty {
    display: none;
  }