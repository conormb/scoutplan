// search field
- if true
  .relative.md:inline-block.w-full
    = search_field_tag(:search, 
      "",
      class: "block w-full rounded text-sm px-2 py-2 bg-stone-100 border border-stone-300 placeholder-stone-400",
      autofocus: true,
      autocomplete: 'off',
      placeholder: raw(t('members.search_by_name')),
      onkeyup: 'performNameSearch();')

    i.fa-magnifying-glass.fas.absolute.right-3(style="top:50%;transform:translateY(-50%);")

javascript:
  // search functionality
  // adapted from https://www.w3schools.com/howto/howto_js_filter_table.asp
  function performNameSearch() {
    var input = document.querySelector('#search');
    var filter = input.value.toUpperCase();

    var rows = document.querySelectorAll('article.member');
    rows.forEach(function(row) {
      var nameCell = row.querySelector('.member-name');

      // the normalize and replace voodoo converts diacriticals to undecorated letters, e.g. Ã± -> n
      var name = nameCell.innerText.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
      if (filter.length < 0 || name.toUpperCase().indexOf(filter) > -1) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });

    toggleIndices(".member-index", ".member")
  }

  function toggleIndices(parentClass, childClass) {
    var visibleParents = 0;

    document.querySelectorAll(parentClass).forEach(function(elem) {
      elem.style.display = "none";

      // ...then, iterate over all visible event rows, traverse backward until we
      // hit a month header, and reveal it. There's an inefficiency here in that
      // we're iterating on every visible event row, meaning we'll repeatedly
      // unhide the same month headers.
      // TODO: traverse forward to next month header, then traverse from there to the next visible event row
      var visibleCount = 0;

      elem.querySelectorAll(childClass).forEach(function(elem) {
        var compStyles = window.getComputedStyle(elem);
        var compDisplay = compStyles.getPropertyValue('display');
        if(compDisplay == "none") {
          return; // nothing to see here...move on
        }
        visibleCount++;
      });

      if (visibleCount > 0) {
        elem.style.display = "block";
        visibleParents++;
      }
    });
  } // function toggleIndices